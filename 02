/**** 複数ファイルの編集 ***/
vim * でカレントディレクトリのすべてのファイルをバッファに読み込む

/***　バッファの切り替え ***/
:ls　バッファのリストを表示
:b{number}  
:bn :bp (buffer-next)(buffer-prev)
<c-^> 現在のファイルと代替えファイルとの切り替え

/*** バッファの削除 ***/
:bd {number} {number} (buffer-delete)


/*** 違うディレクトリのファイルを編集 ***/
:e {filepath}/{filename}
  
  /** :find {filename} でファイルの検索 **/
  :set path+=tests/**  でpathの設定　**すべてのサブディレクトリを含む
  :find {filename}

/*** 存在していないディレクトリにファイルを保存 ****/
:e files/test.txt
:w  //=>書き込みようにファイルを開けません
:!mkdir -p %:h   //=>　%　アクティブなバッファのファイルパス :h ファイル名を取り除く
:w

/*** 単語単位での移動 ***/
w 次の単語の先頭に前進
b 現在の単語もしくは前の単語の先頭に後退
e 現在の単語もしくは次の単語の末尾に前進
ge 前の単語の末尾に後退


/*** 検索 ***/
f{char} 次のchar
F{char} 前のchar
t{char} 次のcharの前の文字
T{char} 前のcharの直後の文字
; 繰り返し
, 逆方向繰り返し

/***? Ministar Boundを削除したい（ピリオドを残す）***/
/*****
f, ,まで移動
dt. t.でピリオドの直前まで消去
***/
I've been expecting you.
/*** ex**** 
D カーソル一から行末まで削除
c$ カーソル一から行末まで削除して挿入モード
***********/

/***? excellentを削除したい***/
Improve your writing deleting adjaectives.
/***A  ******/
fx でexcellentに移動
daw で単語削除

/***Q takes time but eventually を削除したい  ***/
d/ge /=>d{motion} で　geまで検索して削除

This phase takes time but eventually gets ot the point.

/********  text-objects ********/
var tpl=[
  '<a href="{url}">{title}</a>'
 ]

fuv　でurlにカーソルを合わせてvisual-mode
i} => url
a" => {url}
i> => a href="{url}"
it => {title}						//=>タグで囲まれた範囲(タグ含まない)
at => <a href="{url}">{title}</a> //=>タグで囲まれた範囲(タグ含む)
a]=> [
  '<a href="{url}">{title}</a>'
 ]

 /*** Q {url},{title}を書き換え ***/
  '<a href="{url}">{title}</a>'

ci"# //=>"の内側を削除して＃挿入
citclick her //=> タグの内側を削除してclick here挿入

if($hoge='hoge' && $foo='foo'){
	echo 'this is ok';
}

iw 現在の単語
aw 現在の単語＋前後の空白
iW 現在の単語
aW 現在の単語＋前後の空白
is 現在の文
as 現在の文＋前後の空白
ip 現在の段落
ap 現在の段落＋前後どちらかの空行

daw 単語と空白を削除
ciw 単語を削除して挿入モード


/***** カッコをジャンプ *****
console.log([{'a':1},{'b':2}]);

cities=[London Berlin Newy York]
